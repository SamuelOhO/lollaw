---
description: Lollaw 개발 규칙
globs:
alwaysApply: Ture
---

# Lollaw 개발 규칙

## 1. 인증 시스템
- **ONLY Supabase Auth 사용** (NextAuth 제거)
- 모든 사용자 상태는 `useAuth` 훅을 통해 관리
- 클라이언트 사이드 권한 체크는 UI 표시용만, 실제 보안은 서버에서

## 2. 상태 관리
- **전역 상태**: Zustand 사용
- **서버 상태**: React Query 사용
- **로컬 상태**: useState (UI 상태만)

## 3. 에러 처리
- **API 라우트**: 표준화된 `ApiResponse` 타입 사용
- **클라이언트**: `toast.error()` 사용 (console.error, alert 금지)
- **서버**: 구조화된 에러 로깅

## 4. 데이터 페칭
- **단일 쿼리**: 조인을 활용해 관련 데이터 한 번에 가져오기
- **캐싱**: React Query로 서버 상태 캐싱
- **실시간**: Supabase 실시간 구독 최소화

## 5. 타입 정의
- **단일 소스**: `database.types.ts`만 사용
- **확장**: 필요시 `& { }` 문법으로 확장
- **일관성**: 모든 API 응답에 타입 적용

## 6. 보안
- **서버 검증**: 모든 중요 로직은 서버에서 검증
- **RLS**: Supabase RLS 정책 적극 활용
- **입력 검증**: Zod 스키마 사용

## 7. 성능
- **메모이제이션**: React.memo, useMemo, useCallback 적극 사용
- **코드 스플리팅**: 동적 import 활용
- **이미지 최적화**: Next.js Image 컴포넌트 사용

## 8. 코드 구조
- **재사용성**: 공통 로직은 훅으로 추출
- **단일 책임**: 하나의 함수/컴포넌트는 하나의 역할
- **명명 규칙**: 명확하고 일관된 네이밍
